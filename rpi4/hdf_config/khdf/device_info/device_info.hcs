 root {
    device_info {
        match_attr = "hdf_manager";
        template host {
            hostName = "";
            priority = 100;
            template device {
                template deviceNode {
                    policy = 0;
                    priority = 100;
                    preload = 0;
                    permission = 0664;
                    moduleName = "";
                    serviceName = "";
                    deviceMatchAttr = "";
                }
            }
        }
        base :: host {
            hostName = "base_host";
            priority = 50;
            device_support :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 10;
                    permission = 0644;
                    moduleName = "HDF_KEVENT";
                    serviceName = "hdf_kevent";
                }
            }
        }
        platform :: host {
            hostName = "platform_host";
            priority = 50;
            device_gpio :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 10;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_GPIO_MANAGER";
                    serviceName = "HDF_PLATFORM_GPIO_MANAGER";
                }
                device1 :: deviceNode {
                    policy = 0;
                    priority = 10;
                    permission = 0644;
                    moduleName = "linux_gpio_adapter";
                    deviceMatchAttr = "linux_gpio_adapter";
                }
            }
            device_watchdog :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 20;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_WATCHDOG";
                    serviceName = "HDF_PLATFORM_WATCHDOG_0";
                    deviceMatchAttr = "amlogic_a311d_watchdog_0";
                }
            }
           device_rtc :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 30;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_RTC";
                    serviceName = "HDF_PLATFORM_RTC";
                    deviceMatchAttr = "amlogic_a311d_rtc";
                }
            }

            device_uart :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 40;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_UART";
                    serviceName = "HDF_PLATFORM_UART_0";
                    deviceMatchAttr = "amlogic_a311d_uart_0";
                }
                device1 :: deviceNode {
                    policy = 2;
                    permission = 0644;
                    priority = 40;
                    moduleName = "HDF_PLATFORM_UART";
                    serviceName = "HDF_PLATFORM_UART_1";
                    deviceMatchAttr = "amlogic_a311d_uart_1";
                }
            }
            device_i2c :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 50;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_I2C_MANAGER";
                    serviceName = "HDF_PLATFORM_I2C_MANAGER";
                    deviceMatchAttr = "hdf_platform_i2c_manager";
                }
                device1 :: deviceNode {
                    policy = 0;
                    priority = 55;
                    permission = 0644;
                    moduleName = "linux_i2c_adapter";
                    deviceMatchAttr = "linux_i2c_adapter";
                }
            }
            device_adc :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 60;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_ADC_MANAGER";
                    serviceName = "HDF_PLATFORM_ADC_MANAGER";
                    deviceMatchAttr = "hdf_platform_adc_manager";
                }
                device1 :: deviceNode {
                    policy = 0;
                    priority = 65;
                    permission = 0644;
                    moduleName = "linux_adc_adapter";
                    deviceMatchAttr = "linux_adc_adapter_0";
                }
            }
            device_spi :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 60;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_SPI";
                    serviceName = "HDF_PLATFORM_SPI_0";
                    deviceMatchAttr = "amlogic_a311d_spi_0";
                }
                device1 :: deviceNode {
                    policy = 2;
                    priority = 60;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_SPI";
                    serviceName = "HDF_PLATFORM_SPI_1";
                    deviceMatchAttr = "amlogic_a311d_spi_1";
                }
            }
            device_sdio :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 70;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_SDIO";
                    serviceName = "HDF_PLATFORM_MMC_2";
                    deviceMatchAttr = "amlogic_a311d_sdio_0";
                }
            }
            device_emmc :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 20;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_EMMC";
                    serviceName = "HDF_PLATFORM_MMC_0";
                    deviceMatchAttr = "amlogic_a311d_emmc_0";
                }
            }
            device_pwm :: device {
               device0 :: deviceNode {
                    policy = 2;
                    priority = 80;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_PWM";
                    serviceName = "HDF_PLATFORM_PWM_0";
                    deviceMatchAttr = "linux_pwm_adapter_0";
               }
               device1 :: deviceNode {
                    policy = 2;
                    priority = 80;
                    permission = 0644;
                    moduleName = "HDF_PLATFORM_PWM";
                    serviceName = "HDF_PLATFORM_PWM_2";
                    deviceMatchAttr = "linux_pwm_adapter_2";
               }
           }
            device_mipi_dsi:: device {
               device0 :: deviceNode {
                   policy = 0;
                   priority = 150;
                   permission = 0644;
                   moduleName = "HDF_MIPI_TX";
                   serviceName = "HDF_MIPI_TX";
               }
           }
        }
        display :: host {
            hostName = "display_host";
            device_hdf_drm_panel :: device {
                device0 :: deviceNode {
                    policy = 0;
                    priority = 197;
                    preload = 0;
                    moduleName = "HDF_DRMPANEL";
                }
            }
            device_hdf_disp :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 196;
                    permission = 0660;
                    moduleName = "HDF_DISP";
                    serviceName = "hdf_disp";
                }
            }
            device_lcd :: device {
                device0 :: deviceNode {
                    policy = 0;
                    priority = 100;
                    preload = 2;
                    moduleName = "LITE_LCDKIT";
                    deviceMatchAttr = "hdf_lcdkit_driver";
                }
                device1 :: deviceNode {
                    policy = 0;
                    priority = 100;
                    preload = 0;
                    moduleName = "LCD_ICN6211";
                }
            }
            device_pwm_bl :: device {
                device0 :: deviceNode {
                    policy = 0;
                    priority = 95;
                    preload = 0;
                    moduleName = "PWM_BL";
                    deviceMatchAttr = "pwm_bl_dev";
                }
            }
            device_backlight :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 90;
                    preload = 0;
                    permission = 0660;
                    moduleName = "HDF_BL";
                    serviceName = "hdf_bl";
                }
            }
        }

        input :: host {
            hostName = "input_host";
            priority = 100;
            device_input_manager :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 100;
                    preload = 0;
                    permission = 0660;
                    moduleName = "HDF_INPUT_MANAGER";
                    serviceName = "hdf_input_host";
                    deviceMatchAttr = "";
                }
            }
            device_hdf_touch :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 120;
                    preload = 0;
                    permission = 0660;
                    moduleName = "HDF_TOUCH";
                    serviceName = "hdf_input_event1";
                    deviceMatchAttr = "touch_device1";
                }
            }

            device_touch_chip :: device {
                device0 :: deviceNode {
                    policy = 0;
                    priority = 130;
                    preload = 0;
                    permission = 0660;
                    moduleName = "HDF_TOUCH_FT5406";
                    serviceName = "hdf_touch_ft5406_service";
                    deviceMatchAttr = "st_ft5406_5p43";
                }
            }
            device_hdf_hid :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 200;
                    preload = 0;
                    permission = 0660;
                    moduleName = "HDF_HID";
                }
            }
            device_hdf_infrared :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 200;
                    preload = 0;
                    permission = 0660;
                    moduleName = "HDF_INFRARED";
                    serviceName = "hdf_input_event2";
                    deviceMatchAttr = "Infrared_device0";
                }
            }
        }

        network :: host {
            hostName = "network_host";
            device_wifi :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 180;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_WIFI";
                    deviceMatchAttr = "hdf_wlan_driver";
                    serviceName = "hdfwifi";
                }
            }
            device_wlan_chips :: device {
                device0 :: deviceNode {
                    policy = 0;
                    preload = 0;
                    priority = 200;
                    moduleName = "HDF_WLAN_CHIPS";
                    deviceMatchAttr = "hdf_wlan_chips_rtl8822cs";
                    serviceName = "rtlwifi";
                }
            }
        }
        sensor :: host {
            hostName = "sensor_host";
            device_sensor_manager :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 100;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_SENSOR_MGR_AP";
                    serviceName = "hdf_sensor_manager_ap";
                }
            }
            device_sensor_accel :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 110;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_SENSOR_ACCEL";
                    serviceName = "sensor_accel";
                    deviceMatchAttr = "hdf_sensor_accel_driver";
                }
            }
            device_sensor_mxc6655xa :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 120;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_SENSOR_ACCEL_MXC6655XA";
                    serviceName = "hdf_accel_mxc6655xa";
                    deviceMatchAttr = "hdf_sensor_accel_mxc6655xa_driver";
                }
            }
            device_sensor_temperature :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 130;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_SENSOR_TEMPERATURE";
                    serviceName = "sensor_temperature";
                    deviceMatchAttr = "hdf_sensor_temperature_driver";
                }
            }
            device_temperature_sht30 :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 140;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_SENSOR_TEMPERATURE_SHT30";
                    serviceName = "hdf_temperature_sht30";
                    deviceMatchAttr = "hdf_sensor_temperature_sht30_driver";
                }
            }
            device_sensor_humidity :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 150;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_SENSOR_HUMIDITY";
                    serviceName = "sensor_humidity";
                    deviceMatchAttr = "hdf_sensor_humidity_driver";
                }
            }
            device_humidity_sht30 :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 160;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_SENSOR_HUMIDITY_SHT30";
                    serviceName = "hdf_humidity_sht30";
                    deviceMatchAttr = "hdf_sensor_humidity_sht30_driver";
                }
            }
        }
        usb_pnp_linux :: host {
            hostName = "usb_pnp_linux_host";
            device_usb_pnp_linux :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 100;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_USB_PNP_NOTIFY";
                    serviceName = "hdf_usb_pnp_notify_service";
                    deviceMatchAttr = "hdf_usb_pnp_notify_config";
                }
            }
        }
        audio :: host {
            hostName = "audio_host";
            priority = 110;
            device_dai :: device {
                device_primary :: deviceNode {
                    policy = 1;
                    priority = 50;
                    preload = 0;
                    permission = 0666;
                    moduleName = "DAI_A311D";
                    serviceName = "dai_service";
                    deviceMatchAttr = "hdf_dai_driver";
                }
            }
            device_codec :: device {
                device_primary :: deviceNode {
                    policy = 1;
                    priority = 50;
                    preload = 0;
                    permission = 0666;
                    moduleName = "CODEC_A311D";
                    serviceName = "codec_service_0";
                    deviceMatchAttr = "hdf_codec_driver_0";
                }
            }
            device_dsp :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 50;
                    preload = 0;
                    permission = 0666;
                    moduleName = "DSP_A311D";
                    serviceName = "dsp_service_0";
                    deviceMatchAttr = "hdf_dsp_driver";
                }
            }
            device_dma :: device {
                device_primary :: deviceNode {
                    policy = 1;
                    priority = 50;
                    preload = 0;
                    permission = 0666;
                    moduleName = "DMA_A311D";
                    serviceName = "dma_service_0";
                    deviceMatchAttr = "hdf_dma_driver";
                }
            }
            device_audio :: device {
                device_primary :: deviceNode {
                    policy = 2;
                    priority = 60;
                    preload = 0;
                    permission = 0666;
                    moduleName = "HDF_AUDIO";
                    deviceMatchAttr = "hdf_audio_driver_0";
                    serviceName = "hdf_audio_codec_primary_dev0";
                }
            }
            device_stream :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 80;
                    preload = 0;
                    permission = 0666;
                    moduleName = "HDF_AUDIO_STREAM";
                    serviceName = "hdf_audio_render";
                }
                device1 :: deviceNode {
                    policy = 2;
                    priority = 80;
                    preload = 0;
                    permission = 0666;
                    moduleName = "HDF_AUDIO_STREAM";
                    serviceName = "hdf_audio_capture";
                }
            }
            device_control :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 80;
                    preload = 0;
                    permission = 0666;
                    moduleName = "HDF_AUDIO_CONTROL";
                    serviceName = "hdf_audio_control";
                }
            }
            device_analog_headset :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 90;
                    preload = 0;
                    permission = 0666;
                    moduleName = "AUDIO_ANALOG_HEADSET";
                    serviceName = "analog_headset_service";
                    deviceMatchAttr = "analog_headset_attr";
                }
            }
        }
        vibrator :: host {
            hostName = "vibrator_host";
            device_vibrator :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 100;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_VIBRATOR";
                    serviceName = "hdf_misc_vibrator";
                    deviceMatchAttr = "hdf_vibrator_driver";
                }
            }
            device_linear_vibrator :: device {
                device0 :: deviceNode {
                    policy = 1;
                    priority = 105;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_LINEAR_VIBRATOR";
                    serviceName = "hdf_misc_linear_vibrator";
                    deviceMatchAttr = "hdf_linear_vibrator_driver";
                }
            }
        }
        light :: host {
            hostName = "light_host";
            device_light :: device {
                device0 :: deviceNode {
                    policy = 2;
                    priority = 100;
                    preload = 0;
                    permission = 0664;
                    moduleName = "HDF_LIGHT";
                    serviceName = "hdf_light";
                    deviceMatchAttr = "hdf_light_driver";
                }
            }
        }
    }
}