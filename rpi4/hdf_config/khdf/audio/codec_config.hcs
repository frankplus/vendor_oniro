root {
    platform {
        template codec_controller {
            match_attr = "";
            serviceName = "";
            codecDaiName = "";
        }
        controller_0x120c1030 :: codec_controller {
            match_attr = "hdf_codec_driver_0";
            serviceName = "codec_service_0";
            codecDaiName = "codec_dai";
            regConfig {
                 /* reg: register address
                    rreg: register address
                    shift: shift bits
                    rshift: rshift bits
                    min: min value
                    max: max value
                    mask: mask of value
                    invert: enum InvertVal 0-uninvert 1-invert
                    value: value
                */

                controlsConfig = [
                    /*
                        "Main Playback Volume",
                        "Main Capture Volume",
                        "Playback Mute",
                        "Capture Mute",
                        "Mic Left Gain",
                        "Mic Right Gain",
                        "Render Channel Mode",
                        "Captrue Channel Mode"
                    */

                    /*
                        iface
                        0：virtual dac devic
                        1：virtual adc device
                        2：virtual adc device
                        3：virtual mixer device
                        4：Codec device
                        5：PGA device
                        6：AIAO device
                    */

                    /*array index, iface, mixer/mux, enable*/
                    0,  2,  0,  1,
                    1,  2,  0,  1,
                    2,  2,  0,  1,
                    3,  2,  0,  1,
                    4,  2,  0,  1,
                    5,  2,  0,  1,
                    8,  2,  0,  1,
                    9,  2,  0,  1,
                ];

                /* reg, rreg, shift, rshift, min, max, mask, invert, value */
                ctrlParamsSeqConfig = [
                    0xFF,    0xFF,    0,     0,    0x00,    0xFF,    0xFF,    0,    0x00, // DACL/R Playback Volume
                    0xFF,    0xFF,    0,     0,    0x00,    0xFF,    0xFF,    0,    0x00, // ADCL/R Capture Volume
                    0xFF,    0xFF,    0,     0,    0x00,    0x01,    0x01,    0,    0x00, // DAC Playback Mute
                    0xFF,    0xFF,    0,     0,    0x00,    0x01,    0x01,    0,    0x00, // ADCL/R Capture Mute
                    0xFF,    0xFF,    0,     0,    0x00,    0x0F,    0x0F,    0,    0x00, // Mic Left Gain
                    0xFF,    0xFF,    0,     0,    0x00,    0x0F,    0x0F,    0,    0x00, // Mic Right Gain
                    0xFF,    0xFF,    0,     0,    0x00,    0xFF,    0xFF,    0,    0x00, // Render Channel Mode
                    0xFF,    0xFF,    0,     0,    0x00,    0xFF,    0xFF,    0,    0x00, // Captrue Channel Mode
                ];

                ctrlSapmParamsSeqConfig = [
                    0xFF,    0xFF,    0,     0,    0x00,    0x1,    0x1,    1,    0x00,     //LPGA MIC  -- connect MIC1
                    0xFF,    0xFF,    0,     0,    0x00,    0x1,    0x1,    1,    0x00,     //RPGA MIC  -- connect MIC2
                    0xFF,    0xFF,    0,     0,    0x00,    0x1,    0x1,    1,    0x00,     //Speaker1 Switch -- connect speaker
                    0xFF,    0xFF,    0,     0,    0x00,    0x1,    0x1,    1,    0x00,     //Headphone1 Switch -- connect hpl
                    0xFF,    0xFF,    0,     0,    0x00,    0x1,    0x1,    1,    0x00,     //Headphone2 Switch -- connect hpr
                ];
                /*
                 电源管理组件配置
                 reg is 0xFFFF: component has no sapm register bit
                 sapmType, compNameIndex, reg, mask, shift, invert, kcontrolNews, kcontrolsNum
                */
                sapmComponent = [
                    10,      0,     0xFFFF,       0x1,     0,     0,     0,     0,  //ADCL
                    10,      1,     0xFFFF,       0x1,     0,     0,     0,     0,  //ADCR
                    11,     32,     0xFFFF,    0xFFFF,     0,     0,     0,     0,  //DAC1
                    11,     33,     0xFFFF,    0xFFFF,     0,     0,     0,     0,  //DAC2
                    11,     34,     0xFFFF,    0xFFFF,     0,     0,     0,     0,  //DAC3
                    6,      52,     0xFFFF,    0xFFFF,     0,     0,     3,     1,  //SPKL PGA
                    6,      54,     0xFFFF,    0xFFFF,     0,     0,     4,     1,  //HPL PGA
                    6,      55,     0xFFFF,    0xFFFF,     0,     0,     5,     1,  //HPR PGA
                    15,      6,     0xFFFF,    0xFFFF,     0,     0,     0,     0,  //SPK
                    14,     10,     0xFFFF,    0xFFFF,     0,     0,     0,     0,  //HPL
                    14,     11,     0xFFFF,    0xFFFF,     0,     0,     0,     0,  //HPR
                    6,       4,     0xFFFF,    0xFFFF,     0,     0,     1,     1,  //LPGA
                    6,       5,     0xFFFF,    0xFFFF,     0,     0,     2,     1,  //RPGA
                    13,     40,     0xFFFF,    0xFFFF,     0,     0,     0,     0,  //MIC1
                    13,     41,     0xFFFF,       0x1,     0,     0,     0,     0   //MIC2
                ];

                /*g_audioSapmCfgNameList: array index, iface, mixer/mux, enable*/
                sapmConfig = [
                    0,     2,    0,    1,
                    1,     2,    0,    1,
                    24,    2,    0,    1,
                    28,    2,    0,    1,
                    29,    2,    0,    1
                ];
            }
        }
    }
}
